#summary Describes the code layout for the Ballistics system

= Introduction =

The ballistic system is used for all the bullet movement in ACF. It uses the ACF.Bullet table to store every BulletData table currently active (ie in flight) and iterates trough it every frame, calculating it's flightpath for a frame, doing a trace along it, and calling the functions defined in the RoundType file if the trace hits something.

The bullets are NOT props, they are simple table entries serverside, and effects clientside, as to minimise the network footprint.

=Serverside=

== Bullet Creation ==

To fire a bullet, you need to call the ACF_CreateBullet function, with a Bullet table. Said Bullet table is added to the ACF.Bullet table, and ACF.CurBulletIndex is incremented by 1. 
The system uses ACF.CurBulletIndex with a fixed number of indexes to add new bullets instead of just adding them to the table as to avoid synchronisation issues between server and client side when the table is edited.

== Bullet Movement ==

The ACF_ManageBullets hook iterates into the ACF.Bullet table and sends each Bullet Table it contains to the ACF_CalcBulletFlight function so it's flight path can be determined.

=== ACF_CalcBulletFlight ===

This takes the Bullet table and calculates it's flight data, then using it to set the NextPos variable in the table, used as the end of the flight path for this frame.

It also moves the start point to a point behind the bullet relative to it's velocity and the last frame duration so as to catch any prop that moved toward the bullet after it moved last frame and got behind the start point. It then calls ACF_DoBulletsFlight 

=== ACF_DoBulletsFlight ===

This does a trace based on the StartPos and NextPos variables in the Bullet table.

If the trace hits : 

Calls the appropriate function as defined in the RoundType file
It supports 3 return values : 
 * false bool, where the code ends the bullet flight at this point, and destroys it's entry in the ACF.Bullet table
 * "Penetrated" string , where the code will run the same trace again.
 * "Ricochet" string , where the code will call ACF_CalcBulletFlight to calculate a new flight path.

=== ACF_BulletClient ===

This is called each time there is a modification to the bullet path. Currently this is only called after an impact. 
Used to update the clientside prediction model of the bullet.






